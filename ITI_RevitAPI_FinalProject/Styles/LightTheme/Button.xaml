<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colors="Styles/Colors.xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Light_Colors.xaml" />
        <ResourceDictionary Source="Text.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Button_Accent" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Accent1}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <Border Name="InnerBorder" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock 
                                        Foreground="Black" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Text="{TemplateBinding Content}" />
                                </Border>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Accent1}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent1}"/>
                            <Setter TargetName="InnerBorder" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect Radius="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Default" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Text_Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Text_Primary}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Reset Scale on MouseLeave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Info" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Accent2}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Accent2}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent2}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Reset Scale on MouseLeave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Accent_Alt" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent1}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ResourceKey = Brush_Accent1}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent1}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Reset Scale on MouseLeave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Default_Alt" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Text_Primary}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ResourceKey=Brush_Text_Primary}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Text_Primary}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Reset Scale on MouseLeave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Info_Alt" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Accent2}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent2}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ResourceKey=Brush_Accent2}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent2}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1.05" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Reset Scale on MouseLeave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1" Duration="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Calculator" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush_Background_Primary}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="Rubik" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <Grid>
                                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <BlurEffect Radius="6" />
                                    </Border.Effect>
                                    <TextBlock Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush_Background_Primary}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush_Text_Primary}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush_Accent1}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>